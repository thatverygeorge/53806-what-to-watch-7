{"version":3,"sources":["const.js","components/film-screen/film.prop.js","components/small-film-card-player/small-film-card-player.jsx","components/small-film-card/small-film-card.jsx","components/films-list/films-list.jsx","components/genres-list/genres-list.jsx","components/logo/logo.jsx","components/footer/footer.jsx","components/button-show-more/button-show-more.jsx","utils.js","store/action.js","store/adapter.js","store/api-actions.js","store/user/user.js","store/films/films.js","store/genre/genre.js","store/root-reducer.js","store/user/selectors.js","components/user-block/user-block.jsx","components/button-play/button-play.jsx","components/button-my-list/button-my-list.jsx","store/films/selectors.js","components/promo-film/promo-film.jsx","store/genre/selectors.js","components/loading-screen/loading-screen.jsx","components/main-screen/main-screen.jsx","components/sign-in-screen/sign-in-screen.jsx","components/my-list-screen/my-list-screen.jsx","components/films-list-similar/films-list-similar.jsx","components/film-overview/film-overview.jsx","components/film-details/film-details.jsx","components/review/review.jsx","components/film-reviews/film-reviews.jsx","components/film-tabs/film-tabs.jsx","components/film-screen/film-screen.jsx","components/toast/toast.jsx","components/add-review-form/add-review-form.jsx","components/add-review-screen/add-review-screen.jsx","components/player-controls/player-controls.jsx","components/player-screen/player-screen.jsx","components/not-found-screen/not-found-screen.jsx","components/private-route/private-route.jsx","hocs/with-film.jsx","components/app/app.jsx","services/api.js","browser-history.js","store/middlewares/redirect.js","index.js"],"names":["AppRoute","Tabs","APIRoute","AuthorizationStatus","StoreKeys","RatingLabels","PropTypes","shape","id","number","isRequired","name","string","posterImage","previewImage","backgroundImage","backgroundColor","videoLink","previewVideoLink","description","rating","scoresCount","director","starring","arrayOf","runTime","genre","released","isFavorite","bool","SmallFilmCardPlayer","props","playerRef","useRef","film","useEffect","timer","setTimeout","current","play","clearTimeout","src","ref","className","width","height","poster","muted","SmallFilmCard","history","useHistory","isActive","onFilmCardHoverChange","style","cursor","onClick","push","onMouseEnter","onMouseLeave","undefined","alt","to","FilmsList","films","filmsCount","useState","activeFilmID","setActiveFilmID","slice","map","GenresList","activeGenre","onGenreChange","genres","Set","Array","from","Logo","Footer","ButtonShowMore","onShowMoreButtonClick","type","formatRunTimeForPlayer","duration","Math","floor","minutes","seconds","hours","formatRunTimeForFilmDetails","getFilmsByGenre","filter","ActionType","changeGenre","createAction","payload","loadFilms","loadFilm","loadPromoFilm","loadSimilarFilms","loadReviews","reviews","loadFavoriteFilms","favorite","setIsDataLoaded","obj","requireAuthorization","status","logout","redirectToRoute","url","adaptToClient","adaptedEvent","Object","assign","poster_image","preview_image","background_image","background_color","video_link","preview_video_link","scores_count","run_time","is_favorite","fetchFilms","dispatch","_getState","api","get","then","data","key","isDataLoaded","initialState","authorizationStatus","user","createReducer","builder","addCase","state","action","promoFilm","similar","NameSpace","combineReducers","getAuthorizationStatus","UserBlock","useSelector","useDispatch","avatarURL","localStorage","getItem","evt","preventDefault","delete","removeItem","closeSession","catch","ButtonPlay","viewBox","xlinkHref","ButtonMyList","setIsFavorite","prevState","post","postFavorite","getFilms","getFilm","getPromoFilm","getSimilarFilms","getReviews","getFavoriteFilms","getDataLoadedStatus","PromoFilm","getGenre","LoadingScreen","marginTop","textAlign","color","MainScreen","setFilmsCount","target","tagName","textContent","length","prevFilmsCount","SignInScreen","isError","setIsError","onInput","onSubmit","formData","FormData","email","password","split","some","character","setItem","token","avatar_url","login","placeholder","required","data-testid","htmlFor","MyListScreen","FilmsListSimilar","filmIDToExclude","FilmOverview","toString","replace","join","FilmDetails","star","index","array","Fragment","Review","review","date","Date","comment","dateTime","getFullYear","getMonth","getDate","toLocaleDateString","year","month","day","FilmReviews","response","reviewsColumnLeft","reviewsColumnRight","FilmTabs","useParams","tab","getComponentByActiveTab","FilmScreen","Toast","text","AddReviewForm","setReview","toastVisibility","setToastVisbility","setFormDisability","form","elements","forEach","element","disabled","onError","onSuccess","reset","prevReview","postReview","onChange","value","AddReviewScreen","PlayerControls","isPlaying","currentTimeInPercentages","onPausePlayButtonClick","onFullScreenButtonClick","max","left","MediaState","PlayerScreen","isFullScreen","playerState","setPlayerState","handleEscapeKeydown","document","removeEventListener","onTimeUpdate","currentTime","onDurationChange","pause","addEventListener","NotFoundScreen","PrivateRoute","render","path","exact","routeProps","withFilm","Component","fetchFilm","FilmScreenWrapped","AddReviewScreenWrapped","PlayerScreenWrapped","App","HttpCode","browserHistory","createBrowserHistory","redirect","_store","next","onUnauthorized","axios","create","baseURL","timeout","interceptors","use","err","request","headers","getToken","createAPI","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89a2b450.chunk.js","sourcesContent":["export const AppRoute = {\n  MAIN: '/',\n  SIGN_IN: '/login',\n  MY_LIST: '/mylist',\n  FILM: '/films/:id/:tab(details|reviews)?',\n  ADD_REVIEW: '/films/:id/review',\n  PLAYER: '/player/:id',\n  NOT_FOUND: '/404',\n};\n\nexport const Tabs = {\n  OVERVIEW: 'overview',\n  DETAILS: 'details',\n  REVIEWS: 'reviews',\n};\n\nexport const APIRoute = {\n  FILMS: '/films',\n  LOGIN: '/login',\n  LOGOUT: '/logout',\n  REVIEWS: '/comments',\n  SIMILAR: '/similar',\n  PROMO: '/promo',\n  FAVORITE: '/favorite',\n};\n\nexport const AuthorizationStatus = {\n  AUTH: 'AUTH',\n  NO_AUTH: 'NO_AUTH',\n};\n\nexport const StoreKeys = {\n  FILMS: 'films',\n  PROMO_FILM: 'promoFilm',\n  FILM: 'film',\n  REVIEWS: 'reviews',\n  SIMILAR: 'similar',\n  FAVORITE: 'favorite',\n};\n\nexport const RatingLabels = {\n  BAD: 'Bad',\n  NORMAL: 'Normal',\n  GOOD: 'Good',\n  VERY_GOOD: 'Very Good',\n  AWESOME: 'Awesome',\n};\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  posterImage: PropTypes.string.isRequired,\n  previewImage: PropTypes.string.isRequired,\n  backgroundImage: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  videoLink: PropTypes.string.isRequired,\n  previewVideoLink: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  scoresCount: PropTypes.number.isRequired,\n  director: PropTypes.string.isRequired,\n  starring: PropTypes.arrayOf(PropTypes.string).isRequired,\n  runTime: PropTypes.number.isRequired,\n  genre: PropTypes.string.isRequired,\n  released: PropTypes.number.isRequired,\n  isFavorite: PropTypes.bool.isRequired,\n});\n","import React, {useRef, useEffect} from 'react';\nimport filmProp from '../film-screen/film.prop';\n\nconst PLAY_TIMEOUT = 1000;\n\nfunction SmallFilmCardPlayer(props) {\n  const playerRef = useRef(null);\n  const {film} = props;\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      playerRef.current.play();\n    }, PLAY_TIMEOUT);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <video\n      src={film.previewVideoLink}\n      ref={playerRef}\n      className=\"player__video\"\n      width=\"280\"\n      height=\"175\"\n      poster={film.previewImage}\n      muted\n    />\n  );\n}\n\nSmallFilmCardPlayer.propTypes = {\n  film: filmProp,\n};\n\nexport default SmallFilmCardPlayer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link, useHistory} from 'react-router-dom';\nimport filmProp from '../film-screen/film.prop';\nimport SmallFilmCardPlayer from '../small-film-card-player/small-film-card-player';\n\nfunction SmallFilmCard(props) {\n  const history = useHistory();\n  const {film, isActive, onFilmCardHoverChange} = props;\n\n  return (\n    <article\n      style={{cursor: 'pointer'}}\n      className=\"small-film-card catalog__films-card\"\n      onClick={() => history.push(`/films/${film.id}`)}\n      onMouseEnter={() => onFilmCardHoverChange(film.id)}\n      onMouseLeave={() => onFilmCardHoverChange(undefined)}\n    >\n      <div className=\"small-film-card__image\">\n        {!isActive ? <img src={film.previewImage} alt={film.name} width=\"280\" height=\"175\" /> : <SmallFilmCardPlayer film={film} />}\n      </div>\n      <h3 className=\"small-film-card__title\">\n        <Link to={`/films/${film.id}`} className=\"small-film-card__link\">{film.name}</Link>\n      </h3>\n    </article>\n  );\n}\n\nSmallFilmCard.propTypes = {\n  film: filmProp,\n  isActive: PropTypes.bool.isRequired,\n  onFilmCardHoverChange: PropTypes.func.isRequired,\n};\n\nexport default SmallFilmCard;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport SmallFilmCard from '../small-film-card/small-film-card';\nimport filmProp from '../film-screen/film.prop';\n\nfunction FilmsList(props) {\n  const {films, filmsCount} = props;\n  const [activeFilmID, setActiveFilmID] = useState(undefined);\n\n  const onFilmCardHoverChange = (id) => {\n    setActiveFilmID(id);\n  };\n\n  return (\n    <div className=\"catalog__films-list\">\n      {films.slice(0, filmsCount).map((film) => (\n        <SmallFilmCard\n          key={film.id}\n          film={film}\n          isActive={activeFilmID === film.id}\n          onFilmCardHoverChange={onFilmCardHoverChange}\n        />))}\n    </div>\n  );\n}\n\nFilmsList.propTypes = {\n  films: PropTypes.arrayOf(\n    filmProp,\n  ),\n  filmsCount: PropTypes.number.isRequired,\n};\n\nexport default FilmsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport filmProp from '../film-screen/film.prop';\nimport {AppRoute} from '../../const';\n\nfunction GenresList(props) {\n  const {films, activeGenre, onGenreChange} = props;\n\n  const genres = new Set(films.map((film) => film.genre));\n\n  return (\n    <ul className=\"catalog__genres-list\" onClick={onGenreChange}>\n      <li className={`catalog__genres-item ${activeGenre === 'All genres' ? 'catalog__genres-item--active' : ''}`}>\n        <Link to={AppRoute.MAIN} className=\"catalog__genres-link\">All genres</Link>\n      </li>\n\n      {Array.from(genres).map((genre) => (\n        <li className={`catalog__genres-item ${activeGenre === genre ? 'catalog__genres-item--active' : ''}`} key={genre}>\n          <Link to={AppRoute.MAIN} className=\"catalog__genres-link\">{genre}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nGenresList.propTypes = {\n  films: PropTypes.arrayOf(\n    filmProp,\n  ),\n  activeGenre: PropTypes.string.isRequired,\n  onGenreChange: PropTypes.func.isRequired,\n};\n\nexport default GenresList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {AppRoute} from '../../const';\n\nfunction Logo({className = 'logo__link'}) {\n  return (\n    <div className=\"logo\">\n      <Link to={AppRoute.MAIN} className={className}>\n        <span className=\"logo__letter logo__letter--1\">W</span>\n        <span className=\"logo__letter logo__letter--2\">T</span>\n        <span className=\"logo__letter logo__letter--3\">W</span>\n      </Link>\n    </div>\n  );\n}\n\nLogo.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Logo;\n","import React from 'react';\nimport Logo from '../logo/logo';\n\nfunction Footer() {\n  return (\n    <footer className=\"page-footer\">\n      <Logo className=\"logo__link logo__link--light\" />\n\n      <div className=\"copyright\">\n        <p>© 2019 What to watch Ltd.</p>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ButtonShowMore(props) {\n  const {onShowMoreButtonClick} = props;\n\n  return (\n    <button className=\"catalog__button\" type=\"button\" onClick={onShowMoreButtonClick}>Show more</button>\n  );\n}\n\nButtonShowMore.propTypes = {\n  onShowMoreButtonClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonShowMore;\n","import {RatingLabels} from './const';\n\nexport const formatRunTimeForPlayer = (runTime) => {\n  const duration = Math.floor(runTime);\n\n  let minutes = Math.floor(duration / 60);\n  let seconds = duration - minutes * 60;\n  let hours = Math.floor(minutes / 60);\n\n  minutes = minutes % 60;\n\n  hours = hours > 9 ? hours : `0${hours}`;\n  minutes = minutes > 9 ? minutes : `0${minutes}`;\n  seconds = seconds > 9 ? seconds : `0${seconds}`;\n\n  if (hours === '00') {\n    return `${minutes}:${seconds}`;\n  }\n\n  return `${hours}:${minutes}:${seconds}`;\n};\n\nexport const formatRunTimeForFilmDetails = (runTime) => {\n  const hours = Math.floor(runTime / 60);\n  const minutes = runTime % 60 > 9 ? runTime % 60 : `0${runTime % 60}`;\n\n  if (hours === 0) {\n    return `${minutes}m`;\n  } else if (minutes === 0 || minutes === '00') {\n    return `${hours}h`;\n  }\n\n  return `${hours}h ${minutes}m`;\n};\n\nexport const getRatingLevel = (rating) => {\n  if (rating < 3) {\n    return RatingLabels.BAD;\n  } else if (rating < 5) {\n    return RatingLabels.NORMAL;\n  } else if (rating < 8) {\n    return RatingLabels.GOOD;\n  } else if (rating < 10) {\n    return RatingLabels.VERY_GOOD;\n  } else if (rating >= 10) {\n    return RatingLabels.AWESOME;\n  }\n};\n\nexport const excludeFilm = (films, id) => films.filter((film) => film.id !== id);\n\nexport const getFilmsByGenre = (films, genre) => genre === 'All genres' ? films : films.filter((film) => film.genre === genre);\n","import {createAction} from '@reduxjs/toolkit';\n\nexport const ActionType = {\n  CHANGE_GENRE: 'data/changeGenre',\n  LOAD_FILMS: 'data/loadFilms',\n  LOAD_FILM: 'data/loadFilm',\n  LOAD_PROMO_FILM: 'data/loadPromoFilm',\n  SET_IS_DATA_LOADED: 'data/setIsDataLoaded',\n  REQUIRED_AUTHORIZATION: 'user/requiredAuthorization',\n  LOGOUT: 'user/logout',\n  REDIRECT_TO_ROUTE: 'app/redirectToRoute',\n  LOAD_REVIEWS: 'data/loadReviews',\n  LOAD_SIMILAR_FILMS: 'data/loadSimilarFilms',\n  LOAD_FAVORITE_FILMS: 'data/loadFavoriteFilms',\n};\n\nexport const changeGenre = createAction(ActionType.CHANGE_GENRE, (genre) => ({\n  payload: genre,\n}));\n\nexport const loadFilms = createAction(ActionType.LOAD_FILMS, (films) => ({\n  payload: films,\n}));\n\nexport const loadFilm = createAction(ActionType.LOAD_FILM, (film) => ({\n  payload: film,\n}));\n\nexport const loadPromoFilm = createAction(ActionType.LOAD_PROMO_FILM, (film) => ({\n  payload: film,\n}));\n\nexport const loadSimilarFilms = createAction(ActionType.LOAD_SIMILAR_FILMS, (films) => ({\n  payload: films,\n}));\n\nexport const loadReviews = createAction(ActionType.LOAD_REVIEWS, (reviews) => ({\n  payload: reviews,\n}));\n\nexport const loadFavoriteFilms = createAction(ActionType.LOAD_FAVORITE_FILMS, (favorite) => ({\n  payload: favorite,\n}));\n\nexport const setIsDataLoaded = createAction(ActionType.SET_IS_DATA_LOADED, (obj) => ({\n  payload: obj,\n}));\n\nexport const requireAuthorization = createAction(ActionType.REQUIRED_AUTHORIZATION, (status) => ({\n  payload: status,\n}));\n\nexport const logout = createAction(ActionType.LOGOUT);\n\nexport const redirectToRoute = createAction(ActionType.REDIRECT_TO_ROUTE, (url) => ({\n  payload: url,\n}));\n","export const adaptToClient = (film) => {\n  const adaptedEvent = Object.assign(\n    {},\n    film,\n    {\n      posterImage: film.poster_image,\n      previewImage: film.preview_image,\n      backgroundImage: film.background_image,\n      backgroundColor: film.background_color,\n      videoLink: film.video_link,\n      previewVideoLink: film.preview_video_link,\n      scoresCount: film.scores_count,\n      runTime: film.run_time,\n      isFavorite: film.is_favorite,\n    },\n  );\n\n  delete adaptedEvent.poster_image;\n  delete adaptedEvent.preview_image;\n  delete adaptedEvent.background_image;\n  delete adaptedEvent.background_color;\n  delete adaptedEvent.video_link;\n  delete adaptedEvent.preview_video_link;\n  delete adaptedEvent.scores_count;\n  delete adaptedEvent.run_time;\n  delete adaptedEvent.is_favorite;\n\n  return adaptedEvent;\n};\n\nexport const adaptToServer = (film) => {\n  const adaptedEvent = Object.assign(\n    {},\n    film,\n    {\n      'poster_image': film.posterImage,\n      'preview_image': film.previewImage,\n      'background_image': film.backgroundImage,\n      'background_color': film.backgroundColor,\n      'video_link': film.videoLink,\n      'preview_video_link': film.previewVideoLink,\n      'scores_count': film.scoresCount,\n      'run_time': film.runTime,\n      'is_favorite': film.isFavorite,\n    },\n  );\n\n  delete adaptedEvent.posterImage;\n  delete adaptedEvent.previewImage;\n  delete adaptedEvent.backgroundImage;\n  delete adaptedEvent.backgroundColor;\n  delete adaptedEvent.videoLink;\n  delete adaptedEvent.previewVideoLink;\n  delete adaptedEvent.scoresCount;\n  delete adaptedEvent.runTime;\n  delete adaptedEvent.isFavorite;\n\n  return adaptedEvent;\n};\n","import {APIRoute, AppRoute, AuthorizationStatus, StoreKeys} from '../const';\nimport {\n  loadFilm,\n  loadFilms,\n  loadPromoFilm,\n  loadReviews,\n  loadSimilarFilms,\n  redirectToRoute,\n  requireAuthorization,\n  logout as closeSession,\n  setIsDataLoaded,\n  loadFavoriteFilms\n} from './action';\nimport {adaptToClient} from './adapter';\n\nexport const checkAuth = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.LOGIN)\n    .then(() => dispatch(requireAuthorization(AuthorizationStatus.AUTH)))\n    .catch(() => {})\n);\n\nexport const login = ({email, password}) => (dispatch, _getState, api) => (\n  api.post(APIRoute.LOGIN, {email, password})\n    .then(({data}) => {\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('avatar', data.avatar_url);\n      localStorage.setItem('name', data.name);\n      localStorage.setItem('email', data.email);\n    })\n    .then(() => dispatch(requireAuthorization(AuthorizationStatus.AUTH)))\n    .then(() => dispatch(redirectToRoute(AppRoute.MAIN)))\n);\n\nexport const logout = () => (dispatch, _getState, api) => (\n  api.delete(APIRoute.LOGOUT)\n    .then(() => localStorage.removeItem('token'))\n    .then(() => dispatch(closeSession()))\n    .catch(() => {\n      localStorage.removeItem('token');\n      dispatch(closeSession());\n    })\n);\n\nexport const fetchPromoFilm = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.PROMO)\n    .then(({data}) => dispatch(loadPromoFilm(adaptToClient(data))))\n);\n\nexport const fetchFilms = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.FILMS)\n    .then(({data}) => dispatch(loadFilms(data.map((film) => adaptToClient(film)))))\n    .then(() => dispatch(fetchPromoFilm()))\n    .then(() => dispatch(setIsDataLoaded({key: StoreKeys.FILMS, isDataLoaded: true})))\n);\n\nexport const fetchFilm = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.FILMS}/${id}`)\n    .then(({data}) => dispatch(loadFilm(adaptToClient(data))))\n    .then(() => dispatch(setIsDataLoaded({key: StoreKeys.FILM, isDataLoaded: true})))\n    .catch(() => dispatch(setIsDataLoaded({key: StoreKeys.FILM, isDataLoaded: true})))\n);\n\nexport const fetchSimilarFilms = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.FILMS}/${id}${APIRoute.SIMILAR}`)\n    .then(({data}) => dispatch(loadSimilarFilms(data.map((film) => adaptToClient(film)))))\n    .then(() => dispatch(setIsDataLoaded({key: StoreKeys.SIMILAR, isDataLoaded: true})))\n    .catch(() => dispatch(setIsDataLoaded({key: StoreKeys.SIMILAR, isDataLoaded: true})))\n);\n\nexport const fetchFavoriteFilms = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.FAVORITE)\n    .then(({data}) => dispatch(loadFavoriteFilms(data.map((film) => adaptToClient(film)))))\n    .then(() => dispatch(setIsDataLoaded({key: StoreKeys.FAVORITE, isDataLoaded: true})))\n    .catch(() => dispatch(setIsDataLoaded({key: StoreKeys.FAVORITE, isDataLoaded: true})))\n);\n\nexport const fetchReviews = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.REVIEWS}/${id}`)\n    .then((response) => dispatch(loadReviews(response.data)))\n    .then(() => dispatch(setIsDataLoaded({key: StoreKeys.REVIEWS, isDataLoaded: true})))\n    .catch(() => dispatch(setIsDataLoaded({key: StoreKeys.REVIEWS, isDataLoaded: true})))\n);\n\nexport const postReview = (id, {rating, comment}) => (dispatch, _getState, api) => (\n  api.post(`${APIRoute.REVIEWS}/${id}`, {rating, comment})\n);\n\nexport const postFavorite = (id, status) => (dispatch, _getState, api) => (\n  api.post(`${APIRoute.FAVORITE}/${id}/${status}`)\n);\n","import {AuthorizationStatus} from '../../const';\nimport {requireAuthorization, logout} from '../action';\nimport {createReducer} from '@reduxjs/toolkit';\n\nconst initialState = {\n  authorizationStatus: AuthorizationStatus.NO_AUTH,\n};\n\nexport const user = createReducer(initialState, (builder) => {\n  builder\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorizationStatus = action.payload;\n    })\n    .addCase(logout, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NO_AUTH;\n    });\n});\n","import {createReducer} from '@reduxjs/toolkit';\nimport {\n  loadFavoriteFilms,\n  loadFilm,\n  loadFilms,\n  loadPromoFilm,\n  loadReviews,\n  loadSimilarFilms,\n  setIsDataLoaded\n} from '../action';\n\nconst initialState = {\n  films: {\n    data: [],\n    isDataLoaded: false,\n  },\n  promoFilm: undefined,\n  film: {\n    data: undefined,\n    isDataLoaded: false,\n  },\n  reviews: {\n    data: undefined,\n    isDataLoaded: false,\n  },\n  similar: {\n    data: undefined,\n    isDataLoaded: false,\n  },\n  favorite: {\n    data: undefined,\n    isDataLoaded: false,\n  },\n};\n\nexport const films = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadFilms, (state, action) => {\n      state.films.data = action.payload;\n    })\n    .addCase(loadFilm, (state, action) => {\n      state.film.data = action.payload;\n    })\n    .addCase(loadPromoFilm, (state, action) => {\n      state.promoFilm = action.payload;\n    })\n    .addCase(loadSimilarFilms, (state, action) => {\n      state.similar.data = action.payload;\n    })\n    .addCase(loadFavoriteFilms, (state, action) => {\n      state.favorite.data = action.payload;\n    })\n    .addCase(loadReviews, (state, action) => {\n      state.reviews.data = action.payload;\n    })\n    .addCase(setIsDataLoaded, (state, action) => {\n      state[action.payload.key].isDataLoaded = action.payload.isDataLoaded;\n    });\n});\n","import {createReducer} from '@reduxjs/toolkit';\nimport {changeGenre} from '../action';\n\nconst initialState = {\n  genre: 'All genres',\n};\n\nexport const genre = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeGenre, (state, action) => {\n      state.genre = action.payload;\n    });\n});\n","import {combineReducers} from 'redux';\nimport {user} from './user/user';\nimport {films} from './films/films';\nimport {genre} from './genre/genre';\n\nexport const NameSpace = {\n  USER: 'USER',\n  FILMS: 'FILMS',\n  UTIL: 'UTIL',\n};\n\nexport default combineReducers({\n  [NameSpace.USER]: user,\n  [NameSpace.FILMS]: films,\n  [NameSpace.UTIL]: genre,\n});\n","import {NameSpace} from '../root-reducer';\n\nexport const getAuthorizationStatus = (state) => state[NameSpace.USER].authorizationStatus;\n","import React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {logout} from '../../store/api-actions';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\n\nfunction UserBlock() {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const avatarURL = localStorage.getItem('avatar') ?? '';\n\n  const handleSignOut = (evt) => {\n    evt.preventDefault();\n\n    dispatch(logout());\n  };\n\n  return authorizationStatus === AuthorizationStatus.NO_AUTH ?\n    (\n      <div className=\"user-block\">\n        <Link to={AppRoute.SIGN_IN} className=\"user-block__link\">Sign in</Link>\n      </div>\n    ) :\n    (\n      <ul className=\"user-block\">\n        <li className=\"user-block__item\">\n          <div className=\"user-block__avatar\" onClick={() => history.push(AppRoute.MY_LIST)}>\n            <img src={avatarURL !== '' ? avatarURL: 'img/avatar.jpg'} alt=\"User avatar\" width=\"63\" height=\"63\" />\n          </div>\n        </li>\n        <li className=\"user-block__item\">\n          <Link to={AppRoute.MAIN} className=\"user-block__link\" onClick={handleSignOut}>Sign out</Link>\n        </li>\n      </ul>\n    );\n}\n\nexport default UserBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useHistory} from 'react-router-dom';\n\nfunction ButtonPlay(props) {\n  const {id} = props;\n  const history = useHistory();\n\n  return (\n    <button className=\"btn btn--play film-card__button\" type=\"button\" onClick={() => history.push(`/player/${id}`)}>\n      <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n        <use xlinkHref=\"#play-s\"></use>\n      </svg>\n      <span>Play</span>\n    </button>\n  );\n}\n\nButtonPlay.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport default ButtonPlay;\n","import React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {postFavorite} from '../../store/api-actions';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\nimport filmProp from '../film-screen/film.prop';\n\nfunction ButtonMyList(props) {\n  const {film} = props;\n  const history = useHistory();\n  const [isFavorite, setIsFavorite] = useState(film.isFavorite);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const dispatch = useDispatch();\n\n  const handleMyListClick = (evt) => {\n    evt.preventDefault();\n\n    if (authorizationStatus !== AuthorizationStatus.AUTH) {\n      history.push(AppRoute.SIGN_IN);\n    } else {\n      setIsFavorite((prevState) => {\n        const status = prevState ? 0 : 1;\n        dispatch(postFavorite(film.id, status));\n        return !prevState;\n      });\n    }\n  };\n\n  return (\n    <button className=\"btn btn--list film-card__button\" type=\"button\" onClick={handleMyListClick}>\n      <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n        <use xlinkHref={isFavorite ? '#in-list' : '#add'}></use>\n      </svg>\n      <span>My list</span>\n    </button>\n  );\n}\n\nButtonMyList.propTypes = {\n  film: filmProp,\n};\n\nexport default ButtonMyList;\n","import {NameSpace} from '../root-reducer';\n\nexport const getFilms = (state) => state[NameSpace.FILMS].films.data;\nexport const getFilm = (state) => state[NameSpace.FILMS].film.data;\nexport const getPromoFilm = (state) => state[NameSpace.FILMS].promoFilm;\nexport const getSimilarFilms = (state) => state[NameSpace.FILMS].similar.data;\nexport const getReviews = (state) => state[NameSpace.FILMS].reviews.data;\nexport const getFavoriteFilms = (state) => state[NameSpace.FILMS].favorite.data;\nexport const getDataLoadedStatus = (state, key) => state[NameSpace.FILMS][key].isDataLoaded;\n","import React from 'react';\nimport Logo from '../logo/logo';\nimport UserBlock from '../user-block/user-block';\nimport ButtonPlay from '../button-play/button-play';\nimport ButtonMyList from '../button-my-list/button-my-list';\nimport {useSelector} from 'react-redux';\nimport {getPromoFilm} from '../../store/films/selectors';\n\nfunction PromoFilm() {\n  const promoFilm = useSelector(getPromoFilm);\n\n  return (\n    <section className=\"film-card\">\n      <div className=\"film-card__bg\">\n        <img src={promoFilm.backgroundImage} alt={promoFilm.name} />\n      </div>\n\n      <h1 className=\"visually-hidden\">WTW</h1>\n\n      <header className=\"page-header film-card__head\">\n        <Logo />\n\n        <UserBlock />\n      </header>\n\n      <div className=\"film-card__wrap\">\n        <div className=\"film-card__info\">\n          <div className=\"film-card__poster\">\n            <img src={promoFilm.posterImage} alt={`${promoFilm.name} poster`} width=\"218\" height=\"327\" />\n          </div>\n\n          <div className=\"film-card__desc\">\n            <h2 className=\"film-card__title\">{promoFilm.name}</h2>\n            <p className=\"film-card__meta\">\n              <span className=\"film-card__genre\">{promoFilm.genre}</span>\n              <span className=\"film-card__year\">{promoFilm.released}</span>\n            </p>\n\n            <div className=\"film-card__buttons\">\n              <ButtonPlay id={promoFilm.id} />\n              <ButtonMyList film={promoFilm} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default PromoFilm;\n","import {NameSpace} from '../root-reducer';\n\nexport const getGenre = (state) => state[NameSpace.UTIL].genre;\n","import React from 'react';\n\nfunction LoadingScreen() {\n  return (\n    <p style={{ marginTop: '100px', textAlign: 'center', color: '#252525' }}>Loading ...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import React, {useState, useEffect} from 'react';\nimport FilmsList from '../films-list/films-list';\nimport GenresList from '../genres-list/genres-list';\nimport Footer from '../footer/footer';\nimport ButtonShowMore from '../button-show-more/button-show-more';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getFilmsByGenre} from '../../utils';\nimport PromoFilm from '../promo-film/promo-film';\nimport {changeGenre, setIsDataLoaded} from '../../store/action';\nimport {getDataLoadedStatus, getFilms} from '../../store/films/selectors';\nimport {getGenre} from '../../store/genre/selectors';\nimport {fetchFilms} from '../../store/api-actions';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {StoreKeys} from '../../const';\n\nconst INITIAL_FILMS_COUNT = 8;\nconst ADD_FILMS_STEP = 8;\nconst INITIAL_GENRE = 'All genres';\n\nfunction MainScreen() {\n  const isDataLoaded = useSelector((state) => getDataLoadedStatus(state, StoreKeys.FILMS));\n  const films = useSelector(getFilms);\n  const genre = useSelector(getGenre);\n  const [filmsCount, setFilmsCount] = useState(INITIAL_FILMS_COUNT);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isDataLoaded) {\n      dispatch(fetchFilms());\n    }\n\n    return () => {\n      if (isDataLoaded) {\n        dispatch(setIsDataLoaded({key: StoreKeys.FILMS, isDataLoaded: false}));\n      }\n    };\n  }, [dispatch, isDataLoaded]);\n\n  useEffect(() => {\n    dispatch(changeGenre(INITIAL_GENRE));\n  }, [dispatch]);\n\n  const onGenreChange = (evt) => {\n    if (evt.target.tagName === 'A') {\n      evt.preventDefault();\n\n      if (evt.target.textContent !== genre) {\n        setFilmsCount(INITIAL_FILMS_COUNT);\n        dispatch(changeGenre(evt.target.textContent));\n      }\n    }\n  };\n\n  const onShowMoreButtonClick = () => {\n    setFilmsCount((prevFilmsCount) => prevFilmsCount + ADD_FILMS_STEP);\n  };\n\n  if (!isDataLoaded) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <>\n      <PromoFilm />\n\n      <div className=\"page-content\">\n        <section className=\"catalog\">\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>\n\n          <GenresList films={films} activeGenre={genre} onGenreChange={onGenreChange} />\n\n          <FilmsList films={getFilmsByGenre(films, genre)} filmsCount={filmsCount} />\n\n          <div className=\"catalog__more\">\n            {!(filmsCount >= getFilmsByGenre(films, genre).length) && <ButtonShowMore onShowMoreButtonClick={onShowMoreButtonClick} />}\n          </div>\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default MainScreen;\n","import React, {useState} from 'react';\nimport Logo from '../logo/logo';\nimport Footer from '../footer/footer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {login} from '../../store/api-actions';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {Redirect} from 'react-router-dom';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\n\nfunction SignInScreen() {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const [isError, setIsError] = useState(false);\n  const dispatch = useDispatch();\n\n  if (authorizationStatus !== AuthorizationStatus.NO_AUTH) {\n    return <Redirect to={AppRoute.MAIN} />;\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const formData = new FormData(evt.target);\n\n    const email = formData.get('user-email');\n    const password = formData.get('user-password');\n\n    const isPasswordValid = password.split('').some((character) => character !== ' ');\n\n    if (isPasswordValid) {\n      dispatch(login({\n        email,\n        password,\n      }))\n        .catch(() => setIsError(true));\n    } else {\n      setIsError(true);\n    }\n  };\n\n  const handleInput = () => {\n    setIsError(false);\n  };\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <Logo />\n\n        <h1 className=\"page-title user-page__title\">Sign in</h1>\n      </header>\n\n      <div className=\"sign-in user-page__content\">\n        <form action=\"#\" className=\"sign-in__form\" onInput={handleInput} onSubmit={handleSubmit}>\n          {isError ?\n            <div className=\"sign-in__message\">\n              <p>An error occurred. Please check your email or password and try again.</p>\n            </div> : ''}\n          <div className=\"sign-in__fields\">\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"email\"\n                placeholder=\"Email address\"\n                name=\"user-email\"\n                id=\"user-email\"\n                required\n                data-testid=\"user-email\"\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n            </div>\n            <div className=\"sign-in__field\">\n              <input\n                className=\"sign-in__input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"user-password\"\n                id=\"user-password\"\n                required\n                data-testid=\"user-password\"\n              />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n            </div>\n          </div>\n          <div className=\"sign-in__submit\">\n            <button className=\"sign-in__btn\" type=\"submit\">Sign in</button>\n          </div>\n        </form>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default SignInScreen;\n","import React, {useEffect} from 'react';\nimport Logo from '../logo/logo';\nimport Footer from '../footer/footer';\nimport UserBlock from '../user-block/user-block';\nimport FilmsList from '../films-list/films-list';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getDataLoadedStatus, getFavoriteFilms} from '../../store/films/selectors';\nimport {setIsDataLoaded} from '../../store/action';\nimport {fetchFavoriteFilms} from '../../store/api-actions';\nimport {StoreKeys} from '../../const';\n\nfunction MyListScreen() {\n  const films = useSelector(getFavoriteFilms);\n  const isDataLoaded = useSelector((state) => getDataLoadedStatus(state, StoreKeys.FAVORITE));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isDataLoaded) {\n      dispatch(fetchFavoriteFilms());\n    }\n\n    return () => {\n      if (isDataLoaded) {\n        dispatch(setIsDataLoaded({key: StoreKeys.FAVORITE, isDataLoaded: false}));\n      }\n    };\n  }, [dispatch, isDataLoaded]);\n\n  if (!isDataLoaded) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <Logo />\n\n        <h1 className=\"page-title user-page__title\">My list</h1>\n\n        <UserBlock />\n      </header>\n\n      <section className=\"catalog\">\n        {(!films || films.length === 0) ?\n          <h2 className=\"catalog__title\">Catalog is empty</h2> :\n          <h2 className=\"catalog__title visually-hidden\">Catalog</h2>}\n\n        {(!films || films.length === 0) ? '' : <FilmsList films={films} filmsCount={films.length} />}\n      </section>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default MyListScreen;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport SmallFilmCard from '../small-film-card/small-film-card';\nimport {excludeFilm} from '../../utils';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {fetchSimilarFilms} from '../../store/api-actions';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setIsDataLoaded} from '../../store/action';\nimport {getSimilarFilms} from '../../store/films/selectors';\nimport {getDataLoadedStatus} from '../../store/films/selectors';\nimport {StoreKeys} from '../../const';\n\nconst FILMS_COUNT = 4;\n\nfunction FilmsListSimilar(props) {\n  const {filmIDToExclude} = props;\n  const similar = useSelector(getSimilarFilms);\n  const isDataLoaded = useSelector((state) => getDataLoadedStatus(state, StoreKeys.SIMILAR));\n  const [activeFilmID, setActiveFilmID] = useState(undefined);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isDataLoaded) {\n      dispatch(fetchSimilarFilms(filmIDToExclude));\n    }\n\n    return () => {\n      if (isDataLoaded) {\n        dispatch(setIsDataLoaded({key: StoreKeys.SIMILAR, isDataLoaded: false}));\n      }\n    };\n  }, [dispatch, filmIDToExclude, isDataLoaded]);\n\n  if (!isDataLoaded) {\n    return <LoadingScreen />;\n  }\n\n  const onFilmCardHoverChange = (id) => {\n    setActiveFilmID(id);\n  };\n\n  return (\n    <section className=\"catalog catalog--like-this\">\n      <h2 className=\"catalog__title\">{(!similar || similar.length - 1 === 0) ? 'More like this list is empty' : 'More like this'}</h2>\n\n      {(!similar || similar.length - 1 === 0) ? '' :\n        <div className=\"catalog__films-list\">\n          {excludeFilm(similar, filmIDToExclude).slice(0, FILMS_COUNT).map((film) => (\n            <SmallFilmCard\n              key={film.id}\n              film={film}\n              isActive={activeFilmID === film.id}\n              onFilmCardHoverChange={onFilmCardHoverChange}\n            />))}\n        </div>}\n    </section>\n  );\n}\n\nFilmsListSimilar.propTypes = {\n  filmIDToExclude: PropTypes.number,\n};\n\nexport default FilmsListSimilar;\n","import React from 'react';\nimport filmProp from '../film-screen/film.prop';\nimport {getRatingLevel} from '../../utils';\n\nfunction FilmOverview(props) {\n  const {film} = props;\n\n  return (\n    <>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{film.rating.toString().replace('.', ',')}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">{getRatingLevel(film.rating)}</span>\n          <span className=\"film-rating__count\">{film.scoresCount} ratings</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text\">\n        <p>{film.description}</p>\n\n        <p className=\"film-card__director\"><strong>Director: {film.director}</strong></p>\n\n        <p className=\"film-card__starring\"><strong>Starring: {film.starring.join(', ')}</strong></p>\n      </div>\n    </>\n  );\n}\n\nFilmOverview.propTypes = {\n  film: filmProp,\n};\n\nexport default FilmOverview;\n\n","import React from 'react';\nimport filmProp from '../film-screen/film.prop';\nimport {formatRunTimeForFilmDetails} from '../../utils';\n\nfunction FilmDetails(props) {\n  const {film} = props;\n\n  const renderStarring = (starring) =>\n    starring.map((star, index, array) =>\n      index < array.length - 1 ? <React.Fragment key={star}>{`${star}, `}<br /></React.Fragment> : <React.Fragment key={star}>{star}</React.Fragment>);\n\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{film.director}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <span className=\"film-card__details-value\">{renderStarring(film.starring)}</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">{formatRunTimeForFilmDetails(film.runTime)}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{film.genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{film.released}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nFilmDetails.propTypes = {\n  film: filmProp,\n};\n\nexport default FilmDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Review(props) {\n  const {review} = props;\n\n  const date = new Date(review.date);\n  const dateOptions = {year: 'numeric', month: 'long', day: 'numeric' };\n\n  return (\n    <div className=\"review\">\n      <blockquote className=\"review__quote\">\n        <p className=\"review__text\">{review.comment}</p>\n\n        <footer className=\"review__details\">\n          <cite className=\"review__author\">{review.user.name}</cite>\n          <time className=\"review__date\" dateTime={`${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`}>{date.toLocaleDateString('en-US', dateOptions)}</time>\n        </footer>\n      </blockquote>\n\n      <div className=\"review__rating\">{review.rating.toString().replace('.', ',')}</div>\n    </div>\n  );\n}\n\nReview.propTypes = {\n  review: PropTypes.object.isRequired,\n};\n\nexport default Review;\n\n","import React, {useEffect} from 'react';\nimport Review from '../review/review';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport {fetchReviews} from '../../store/api-actions';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setIsDataLoaded} from '../../store/action';\nimport {getFilm, getReviews} from '../../store/films/selectors';\nimport {getDataLoadedStatus} from '../../store/films/selectors';\nimport {StoreKeys} from '../../const';\n\nfunction FilmReviews() {\n  const film = useSelector(getFilm);\n  const reviews = useSelector(getReviews);\n  const isDataLoaded = useSelector((state) => getDataLoadedStatus(state, StoreKeys.REVIEWS));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isDataLoaded) {\n      dispatch(fetchReviews(film.id));\n    }\n\n    return () => {\n      if (isDataLoaded) {\n        dispatch(setIsDataLoaded({key: StoreKeys.REVIEWS, isDataLoaded: false}));\n      }\n    };\n  }, [dispatch, film.id, isDataLoaded]);\n\n  if (!isDataLoaded) {\n    return <LoadingScreen />;\n  }\n\n  if (!reviews || reviews.length === 0) {\n    return <p style={{ marginTop: '100px', textAlign: 'center', color: '#252525' }}>Reviews list is empty</p>;\n  }\n\n  const reviewsColumnLeft = reviews.slice(0, reviews.length / 2 + reviews.length % 2);\n  const reviewsColumnRight = reviews.slice(reviews.length / 2 + reviews.length % 2);\n\n  return (\n    <div className=\"film-card__reviews film-card__row\">\n      <div className=\"film-card__reviews-col\">\n        {reviewsColumnLeft.map((review) => <Review key={review.id} review={review} />)}\n      </div>\n      <div className=\"film-card__reviews-col\">\n        {reviewsColumnRight.map((review) => <Review key={review.id} review={review} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default FilmReviews;\n\n","import React from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport filmProp from '../film-screen/film.prop';\nimport FilmOverview from '../film-overview/film-overview';\nimport FilmDetails from '../film-details/film-details';\nimport FilmReviews from '../film-reviews/film-reviews';\nimport {Tabs} from '../../const';\n\nfunction FilmTabs(props) {\n  const {film} = props;\n  const {tab = Tabs.OVERVIEW} = useParams();\n\n  const getComponentByActiveTab = () => {\n    switch (tab) {\n      case Tabs.DETAILS:\n        return <FilmDetails film={film} />;\n      case Tabs.REVIEWS:\n        return <FilmReviews film={film} />;\n      default:\n        return <FilmOverview film={film} />;\n    }\n  };\n\n  return (\n    <div className=\"film-card__desc\">\n      <nav className=\"film-nav film-card__nav\">\n        <ul className=\"film-nav__list\">\n          <li className={`film-nav__item ${tab === Tabs.OVERVIEW ? 'film-nav__item--active' : ''}`}>\n            <Link to={`/films/${film.id}`} className=\"film-nav__link\">Overview</Link>\n          </li>\n          <li className={`film-nav__item ${tab === Tabs.DETAILS ? 'film-nav__item--active' : ''}`}>\n            <Link to={`/films/${film.id}/details`} className=\"film-nav__link\">Details</Link>\n          </li>\n          <li className={`film-nav__item ${tab === Tabs.REVIEWS ? 'film-nav__item--active' : ''}`}>\n            <Link to={`/films/${film.id}/reviews`} className=\"film-nav__link\">Reviews</Link>\n          </li>\n        </ul>\n      </nav>\n\n      {getComponentByActiveTab()}\n    </div>\n  );\n}\n\nFilmTabs.propTypes = {\n  film: filmProp,\n};\n\nexport default FilmTabs;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Logo from '../logo/logo';\nimport Footer from '../footer/footer';\nimport UserBlock from '../user-block/user-block';\nimport ButtonPlay from '../button-play/button-play';\nimport ButtonMyList from '../button-my-list/button-my-list';\nimport FilmsListSimilar from '../films-list-similar/films-list-similar';\nimport FilmTabs from '../film-tabs/film-tabs';\nimport {AuthorizationStatus} from '../../const';\nimport {useSelector} from 'react-redux';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\nimport filmProp from './film.prop';\n\nfunction FilmScreen(props) {\n  const {film} = props;\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <>\n      <section className=\"film-card film-card--full\">\n        <div className=\"film-card__hero\">\n          <div className=\"film-card__bg\">\n            <img src={film.backgroundImage} alt={film.name} />\n          </div>\n\n          <h1 className=\"visually-hidden\">WTW</h1>\n\n          <header className=\"page-header film-card__head\">\n            <Logo />\n\n            <UserBlock />\n          </header>\n\n          <div className=\"film-card__wrap\">\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{film.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{film.genre}</span>\n                <span className=\"film-card__year\">{film.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <ButtonPlay id={film.id} />\n                <ButtonMyList film={film} />\n                {authorizationStatus === AuthorizationStatus.AUTH ? <Link to={`/films/${film.id}/review`} className=\"btn film-card__button\">Add review</Link> : ''}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"film-card__wrap film-card__translate-top\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster film-card__poster--big\">\n              <img src={film.posterImage} alt={`${film.name} poster`} width=\"218\" height=\"327\" />\n            </div>\n\n            <FilmTabs film={film} />\n          </div>\n        </div>\n      </section>\n\n      <div className=\"page-content\">\n        <FilmsListSimilar filmIDToExclude={film.id}/>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nFilmScreen.propTypes = {\n  film: filmProp,\n};\n\nexport default FilmScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Toast(props) {\n  const {text} = props;\n\n  return (\n    <div className=\"toast\">\n      <p className=\"toast__text\">{text}</p>\n    </div>\n  );\n}\n\nToast.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Toast;\n\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Toast from '../toast/toast';\nimport {useDispatch} from 'react-redux';\nimport {postReview} from '../../store/api-actions';\nimport {redirectToRoute} from '../../store/action';\n\nconst TOAST_SHOW_TIME = 2000;\nconst errorMessage = 'An error occurred. Please try again.';\n\nfunction AddReviewForm(props) {\n  const {id} = props;\n  const [review, setReview] = useState({\n    rating: 0,\n    comment: '',\n  });\n  const {rating, comment} = review;\n  const [toastVisibility, setToastVisbility] = useState(false);\n  const dispatch = useDispatch();\n\n  const setFormDisability = (form, bool) => {\n    Array.from(form.elements).forEach((element) => element.disabled = bool);\n  };\n\n  const onError = (form) => {\n    setToastVisbility(form, true);\n\n    setTimeout(() => {\n      if (form) {\n        setFormDisability(form, false);\n        setToastVisbility(form, false);\n      }\n    }, TOAST_SHOW_TIME);\n  };\n\n  const onSuccess = (form) => {\n    if (form) {\n      setFormDisability(form, false);\n\n      form.reset();\n      setReview((prevReview) => ({\n        ...prevReview,\n        rating: 0,\n        comment: '',\n      }));\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setFormDisability(evt.target, true);\n\n    dispatch(postReview(id, {rating, comment}, onSuccess, onError))\n      .then(() => {\n        onSuccess(evt.target);\n        dispatch(redirectToRoute(`/films/${id}`));\n      })\n      .catch(() => onError(evt.target));\n  };\n\n  const handleRatingChange = (evt) => {\n    const {value} = evt.target;\n\n    setReview((prevReview) => ({\n      ...prevReview,\n      rating: value,\n    }));\n  };\n\n  const handleCommentChange = (evt) => {\n    const {value} = evt.target;\n\n    setReview((prevReview) => ({\n      ...prevReview,\n      comment: value,\n    }));\n  };\n\n  return (\n    <form action=\"#\" className=\"add-review__form\" onSubmit={handleSubmit}>\n      <div className=\"rating\">\n        <div className=\"rating__stars\" onChange={handleRatingChange}>\n          <input className=\"rating__input\" id=\"star-10\" type=\"radio\" name=\"rating\" value=\"10\" data-testid=\"star-10\" />\n          <label className=\"rating__label\" htmlFor=\"star-10\">Rating 10</label>\n\n          <input className=\"rating__input\" id=\"star-9\" type=\"radio\" name=\"rating\" value=\"9\" />\n          <label className=\"rating__label\" htmlFor=\"star-9\">Rating 9</label>\n\n          <input className=\"rating__input\" id=\"star-8\" type=\"radio\" name=\"rating\" value=\"8\" />\n          <label className=\"rating__label\" htmlFor=\"star-8\">Rating 8</label>\n\n          <input className=\"rating__input\" id=\"star-7\" type=\"radio\" name=\"rating\" value=\"7\" />\n          <label className=\"rating__label\" htmlFor=\"star-7\">Rating 7</label>\n\n          <input className=\"rating__input\" id=\"star-6\" type=\"radio\" name=\"rating\" value=\"6\" />\n          <label className=\"rating__label\" htmlFor=\"star-6\">Rating 6</label>\n\n          <input className=\"rating__input\" id=\"star-5\" type=\"radio\" name=\"rating\" value=\"5\" />\n          <label className=\"rating__label\" htmlFor=\"star-5\">Rating 5</label>\n\n          <input className=\"rating__input\" id=\"star-4\" type=\"radio\" name=\"rating\" value=\"4\" />\n          <label className=\"rating__label\" htmlFor=\"star-4\">Rating 4</label>\n\n          <input className=\"rating__input\" id=\"star-3\" type=\"radio\" name=\"rating\" value=\"3\" />\n          <label className=\"rating__label\" htmlFor=\"star-3\">Rating 3</label>\n\n          <input className=\"rating__input\" id=\"star-2\" type=\"radio\" name=\"rating\" value=\"2\" />\n          <label className=\"rating__label\" htmlFor=\"star-2\">Rating 2</label>\n\n          <input className=\"rating__input\" id=\"star-1\" type=\"radio\" name=\"rating\" value=\"1\" />\n          <label className=\"rating__label\" htmlFor=\"star-1\">Rating 1</label>\n        </div>\n      </div>\n\n      <div className=\"add-review__text\">\n        <textarea\n          className=\"add-review__textarea\"\n          name=\"review-text\"\n          id=\"review-text\"\n          placeholder=\"Review text\"\n          onChange={handleCommentChange}\n          data-testid=\"review-text\"\n        >\n        </textarea>\n        <div className=\"add-review__submit\">\n          <button className=\"add-review__btn\" type=\"submit\" disabled={!(rating !== 0 && comment.length >= 50 && comment.length <= 400)}>Post</button>\n        </div>\n\n      </div>\n\n      {toastVisibility ? <Toast text={errorMessage}/> : ''}\n    </form>\n  );\n}\n\nAddReviewForm.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nexport default AddReviewForm;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport Logo from '../logo/logo';\nimport UserBlock from '../user-block/user-block';\nimport AddReviewForm from '../add-review-form/add-review-form';\nimport filmProp from '../film-screen/film.prop';\n\nfunction AddReviewScreen(props) {\n  const {film} = props;\n\n  return (\n    <section className=\"film-card film-card--full\">\n      <div className=\"film-card__header\">\n        <div className=\"film-card__bg\">\n          <img src={film.backgroundImage} alt={film.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header\">\n          <Logo />\n\n          <nav className=\"breadcrumbs\">\n            <ul className=\"breadcrumbs__list\">\n              <li className=\"breadcrumbs__item\">\n                <Link to={`/films/${film.id}`} className=\"breadcrumbs__link\">{film.name}</Link>\n              </li>\n              <li className=\"breadcrumbs__item\">\n                <Link to={`/films/${film.id}/review`} className=\"breadcrumbs__link\">Add review</Link>\n              </li>\n            </ul>\n          </nav>\n\n          <UserBlock />\n        </header>\n\n        <div className=\"film-card__poster film-card__poster--small\">\n          <img src={film.posterImage} alt={`${film.name} poster`} width=\"218\" height=\"327\" />\n        </div>\n      </div>\n\n      <div className=\"add-review\">\n        <AddReviewForm id={film.id} />\n      </div>\n\n    </section>\n  );\n}\n\nAddReviewScreen.propTypes = {\n  film: filmProp,\n};\n\nexport default AddReviewScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction PlayerControls(props) {\n  const {\n    name,\n    isPlaying,\n    duration,\n    currentTimeInPercentages,\n    onPausePlayButtonClick,\n    onFullScreenButtonClick,\n  } = props;\n\n  return (\n    <div className=\"player__controls\">\n      <div className=\"player__controls-row\">\n        <div className=\"player__time\">\n          <progress className=\"player__progress\" value=\"0\" max=\"100\"></progress>\n          <div className=\"player__toggler\" style={{ left: `${currentTimeInPercentages}` }}>Toggler</div>\n        </div>\n        <div className=\"player__time-value\">{duration}</div>\n      </div>\n\n      <div className=\"player__controls-row\">\n        <button type=\"button\" className=\"player__play\" onClick={onPausePlayButtonClick}>\n          <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n            <use xlinkHref={isPlaying ? '#pause' : '#play-s'}></use>\n          </svg>\n          <span>Play</span>\n        </button>\n        <div className=\"player__name\">{name}</div>\n\n        <button type=\"button\" className=\"player__full-screen\" onClick={onFullScreenButtonClick}>\n          <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n            <use xlinkHref=\"#full-screen\"></use>\n          </svg>\n          <span>Full screen</span>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nPlayerControls.propTypes = {\n  name: PropTypes.string.isRequired,\n  isPlaying: PropTypes.number.isRequired,\n  duration: PropTypes.string.isRequired,\n  currentTimeInPercentages: PropTypes.string.isRequired,\n  onPausePlayButtonClick: PropTypes.func.isRequired,\n  onFullScreenButtonClick: PropTypes.func.isRequired,\n};\n\nexport default PlayerControls;\n","import React, {useRef, useState} from 'react';\nimport {AppRoute} from '../../const';\nimport {useHistory} from 'react-router-dom';\nimport PlayerControls from '../player-controls/player-controls';\nimport {formatRunTimeForPlayer} from '../../utils';\nimport filmProp from '../film-screen/film.prop';\n\nconst MediaState = {\n  PAUSE: 0,\n  PLAYING: 1,\n  TRANSITION: -1,\n};\n\nfunction PlayerScreen(props) {\n  const {film} = props;\n  const history = useHistory();\n\n  const [playerState, setPlayerState] = useState({\n    isPlaying: MediaState.PAUSE,\n    isFullScreen: false,\n    duration: '',\n    currentTimeInPercentages: '',\n  });\n  const {isPlaying, isFullScreen, duration, currentTimeInPercentages} = playerState;\n  const playerRef = useRef();\n\n  const onPausePlayButtonClick = () => {\n    if (isPlaying === MediaState.PAUSE) {\n      setPlayerState((prevState) => ({\n        ...prevState,\n        isPlaying: MediaState.TRANSITION,\n      }));\n\n      playerRef.current.play()\n        .then(() => {\n          setPlayerState((prevState) => {\n            if (prevState.isPlaying === MediaState.TRANSITION) {\n              return {\n                ...prevState,\n                isPlaying: MediaState.PLAYING,\n              };\n            }\n          });\n        })\n        .catch(() => {\n          setPlayerState((prevState) => ({\n            ...prevState,\n            isPlaying: MediaState.PAUSE,\n          }));\n        });\n\n      return;\n    }\n\n    playerRef.current.pause();\n    setPlayerState((prevState) => ({\n      ...prevState,\n      isPlaying: MediaState.PAUSE,\n    }));\n  };\n\n  const handleEscapeKeydown = (evt) => {\n    if (evt.key === 'Escape') {\n      setPlayerState((prevState) => ({\n        ...prevState,\n        isFullScreen: !prevState.isFullScreen,\n      }));\n\n      document.removeEventListener('keydown', handleEscapeKeydown);\n    }\n  };\n\n  const onFullScreenButtonClick = () => {\n    setPlayerState((prevState) => ({\n      ...prevState,\n      isFullScreen: !prevState.isFullScreen,\n    }));\n\n    document.addEventListener('keydown', handleEscapeKeydown);\n  };\n\n  const handleTimeUpdate = () => {\n    setPlayerState((prevState) => ({\n      ...prevState,\n      currentTimeInPercentages: `${playerRef.current.currentTime * 100 / playerRef.current.duration}%`,\n    }));\n  };\n\n  const handleDurationChange = (evt) => {\n    setPlayerState((prevState) => ({\n      ...prevState,\n      duration: formatRunTimeForPlayer(evt.target.duration),\n    }));\n  };\n\n  return (\n    <div className=\"player\">\n      <video\n        ref={playerRef}\n        src={film.videoLink}\n        className=\"player__video\"\n        poster={film.backgroundImage}\n        onTimeUpdate={handleTimeUpdate}\n        onDurationChange={handleDurationChange}\n      >\n      </video>\n\n      <button type=\"button\" className=\"player__exit\" onClick={() => history.push(AppRoute.MAIN)}>Exit</button>\n\n      {!isFullScreen ?\n        <PlayerControls\n          name={film.name}\n          isPlaying={isPlaying}\n          duration={duration}\n          currentTimeInPercentages={currentTimeInPercentages}\n          onPausePlayButtonClick={onPausePlayButtonClick}\n          onFullScreenButtonClick={onFullScreenButtonClick}\n        /> : ''}\n    </div>\n  );\n}\n\nPlayerScreen.propTypes = {\n  film: filmProp,\n};\n\nexport default PlayerScreen;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {AppRoute} from '../../const';\n\nfunction NotFoundScreen() {\n  return (\n    <section style={{ marginTop: '100px', textAlign: 'center', color: '#252525' }}>\n      <h1>404. Page not found</h1>\n      <Link to={AppRoute.MAIN}>Go to the main page</Link>\n    </section>\n  );\n}\n\nexport default NotFoundScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Redirect} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {AppRoute, AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus} from '../../store/user/selectors';\n\nfunction PrivateRoute(props) {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const {render, path, exact} = props;\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={(routeProps) => (\n        authorizationStatus === AuthorizationStatus.AUTH\n          ? render(routeProps)\n          : <Redirect to={AppRoute.SIGN_IN} />\n      )}\n    />\n  );\n}\n\nPrivateRoute.propTypes = {\n  exact: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n};\n\nexport default PrivateRoute;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useParams} from 'react-router-dom';\nimport LoadingScreen from '../components/loading-screen/loading-screen';\nimport NotFoundScreen from '../components/not-found-screen/not-found-screen';\nimport {StoreKeys} from '../const';\nimport {setIsDataLoaded} from '../store/action';\nimport {fetchFilm} from '../store/api-actions';\nimport {getDataLoadedStatus, getFilm} from '../store/films/selectors';\n\nconst withFilm = (Component) => {\n  function WithFilm(props) {\n    const film = useSelector(getFilm);\n    const isDataLoaded = useSelector((state) => getDataLoadedStatus(state, StoreKeys.FILM));\n    const {id} = useParams();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      if (!isDataLoaded) {\n        dispatch(fetchFilm(id));\n      }\n\n      return () => {\n        if (isDataLoaded) {\n          dispatch(setIsDataLoaded({key: StoreKeys.FILM, isDataLoaded: false}));\n        }\n      };\n    }, [dispatch, id, isDataLoaded]);\n\n    if (!isDataLoaded) {\n      return <LoadingScreen />;\n    }\n\n    if (!film) {\n      return <NotFoundScreen />;\n    }\n\n    return <Component film={film} />;\n  }\n\n  return WithFilm;\n};\n\nexport default withFilm;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport {AppRoute} from '../../const';\nimport MainScreen from '../main-screen/main-screen';\nimport SignInScreen from '../sign-in-screen/sign-in-screen';\nimport MyListScreen from '../my-list-screen/my-list-screen';\nimport FilmScreen from '../film-screen/film-screen';\nimport AddReviewScreen from '../add-review-screen/add-review-screen';\nimport PlayerScreen from '../player-screen/player-screen';\nimport NotFoundScreen from '../not-found-screen/not-found-screen';\nimport PrivateRoute from '../private-route/private-route';\nimport withFilm from '../../hocs/with-film';\n\nconst FilmScreenWrapped = withFilm(FilmScreen);\nconst AddReviewScreenWrapped = withFilm(AddReviewScreen);\nconst PlayerScreenWrapped = withFilm(PlayerScreen);\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path={AppRoute.MAIN}>\n        <MainScreen />\n      </Route>\n      <Route exact path={AppRoute.SIGN_IN}>\n        <SignInScreen />\n      </Route>\n      <PrivateRoute\n        exact\n        path={AppRoute.MY_LIST}\n        render={() => <MyListScreen />}\n      >\n      </PrivateRoute>\n      <PrivateRoute\n        exact\n        path={AppRoute.ADD_REVIEW}\n        render={() => <AddReviewScreenWrapped />}\n      >\n      </PrivateRoute>\n      <Route exact path={AppRoute.FILM}>\n        <FilmScreenWrapped />\n      </Route>\n      <Route exact path={AppRoute.PLAYER}>\n        <PlayerScreenWrapped />\n      </Route>\n      <Route>\n        <NotFoundScreen />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\n\nconst BACKEND_URL = 'https://7.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nconst HttpCode = {\n  UNAUTHORIZED: 401,\n};\n\nconst getToken = () => (localStorage.getItem('token') ?? '');\n\nexport const createAPI = (onUnauthorized) => {\n\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = (err) => {\n    const {response} = err;\n\n    if (response.status === HttpCode.UNAUTHORIZED) {\n      onUnauthorized();\n    }\n\n    throw err;\n  };\n\n  api.interceptors.response.use(onSuccess, onFail);\n  api.interceptors.request.use((request) => {\n    request.headers['x-token'] = getToken();\n    return request;\n  });\n\n  return api;\n};\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import browserHistory from '../../browser-history';\nimport {ActionType} from '../action';\n\nexport const redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(action.payload);\n  }\n\n  return next(action);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './components/app/app';\nimport rootReducer from './store/root-reducer';\nimport {createAPI} from './services/api';\nimport {checkAuth} from './store/api-actions';\nimport {AuthorizationStatus} from './const';\nimport {redirect} from './store/middlewares/redirect';\nimport {requireAuthorization} from './store/action';\nimport {configureStore} from '@reduxjs/toolkit';\nimport {HashRouter} from 'react-router-dom';\nimport browserHistory from './browser-history';\n\nconst api = createAPI(() => store.dispatch(requireAuthorization(AuthorizationStatus.NO_AUTH)));\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nstore.dispatch(checkAuth());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter history={browserHistory}>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}